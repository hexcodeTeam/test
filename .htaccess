RewriteEngine on

RewriteBase /
# NC(no case) 不区分大小写 

# NS 如果是内部子请求,则跳过
# P(force proxy) 强制使用代理转发。 暂时还不明白怎么用
# NE(no URI escaping of output) 不在输出转义特殊字符 (禁止URL中的字符自动转义成%[0-9]+的形式)
# C (chained with next rule)如果匹配该规则，则继续下面的有C标志的规则。
# T=MIME-type(force MIME type) 强制MIME类型

# PT(pass through to next handler) 传递给下一个处理 , 将重写结果运用于mod_alias 
#RewriteRule ^/abc(.*) /def$1 [PT] # 将会交给/def规则处理 
#Alias /def /ghi 


# 反向引用 $N 用于 RewriteRule 中匹配的变量调用(0 <= N <= 9) 
# 反向引用 %N 用于 RewriteCond 中最后一个匹配的变量调用(1 <= N <= 9)



# 不带www的跳转到带www的301重定向
# [R=301,L] 
# R[=code](force redirect) 强制外部重定向 code默认为302临时移动,所以这里用301永久移动
# L (last rule) 表明当前规则是最后一条规则，停止分析以后规则的重写。 这里因为需要跳转了,所以不需要解析下面的规则咯

RewriteCond %{HTTP_HOST} ^rewrite.me [OR]
RewriteCond %{HTTP_HOST} ^rewrite2.me
RewriteRule (.*) http://www.rewrite.me/$1 [R=301,L]

# F(force URL to be forbidden)禁用URL,返回403 HTTP状态码。 
# G(force URL to be gone) 强制URL为GONE，返回410 HTTP状态码。
RewriteRule ^(a\.php)$ 1 [G,L]


# QSA(query string append) 追加请求字符串 
# index_1.php?name=345  --->  index.php?id=1&name=345  
RewriteRule ^index_([0-9]+)\.php  index.php\?id=$1 [QSA,L,NE]


# N(next round) 循环同一个规则，直到不能满足匹配 
RewriteRule ^h([0-9]{1,3})\.php  h7$1\.php [R,N]



#RewriteRule ^(application) - [F,L]
#RewriteCond %{REQUEST_FILENAME} !-f
#RewriteCond %{REQUEST_FILENAME} !-d
#RewriteRule ^(.*)$ index.php/$0 [PT,L]
